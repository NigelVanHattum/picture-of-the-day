name: Release

on:
  schedule:
    - cron: '0 0 * * 2'
  workflow_dispatch:

jobs:
  create_release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set date variable
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d')"

      - name: Determine release tag
        id: determine_tag
        run: |
          DATE="${{ steps.date.outputs.date }}"
          RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${DATE}")
          if [ $RELEASE_EXISTS -eq 200 ]; then
            i=1
            while [ $RELEASE_EXISTS -eq 200 ]; do
              DATE="${{ steps.date.outputs.date }}.$i"
              RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" -X GET -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/${DATE}")
              i=$((i+1))
            done
          fi
          echo "::set-output name=tag::${DATE}"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.determine_tag.outputs.tag }}
          release_name: Release ${{ steps.determine_tag.outputs.tag }}
          body: |
            This is an automated release created by GitHub Actions.
          draft: false
          prerelease: false

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: nigel95/picture-of-the-day
      
      - name: Build and push Docker image (amd64)
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            nigel95/picture-of-the-day:latest
            nigel95/picture-of-the-day:${{ steps.determine_tag.outputs.tag }}
          labels: ${{ steps.meta.outputs.labels }}
